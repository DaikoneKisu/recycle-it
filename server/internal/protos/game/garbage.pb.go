// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.19.6
// source: game/garbage.proto

package game

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GarbageType int32

const (
	GarbageType_GARBAGE_TYPE_UNKNOWN GarbageType = 0
	GarbageType_GARBAGE_TYPE_PLASTIC GarbageType = 1
	GarbageType_GARBAGE_TYPE_GLASS   GarbageType = 2
	GarbageType_GARBAGE_TYPE_PAPER   GarbageType = 3
	GarbageType_GARBAGE_TYPE_ORGANIC GarbageType = 4
	GarbageType_GARBAGE_TYPE_METAL   GarbageType = 5
	GarbageType_GARBAGE_TYPE_SPECIAL GarbageType = 6
)

// Enum value maps for GarbageType.
var (
	GarbageType_name = map[int32]string{
		0: "GARBAGE_TYPE_UNKNOWN",
		1: "GARBAGE_TYPE_PLASTIC",
		2: "GARBAGE_TYPE_GLASS",
		3: "GARBAGE_TYPE_PAPER",
		4: "GARBAGE_TYPE_ORGANIC",
		5: "GARBAGE_TYPE_METAL",
		6: "GARBAGE_TYPE_SPECIAL",
	}
	GarbageType_value = map[string]int32{
		"GARBAGE_TYPE_UNKNOWN": 0,
		"GARBAGE_TYPE_PLASTIC": 1,
		"GARBAGE_TYPE_GLASS":   2,
		"GARBAGE_TYPE_PAPER":   3,
		"GARBAGE_TYPE_ORGANIC": 4,
		"GARBAGE_TYPE_METAL":   5,
		"GARBAGE_TYPE_SPECIAL": 6,
	}
)

func (x GarbageType) Enum() *GarbageType {
	p := new(GarbageType)
	*p = x
	return p
}

func (x GarbageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GarbageType) Descriptor() protoreflect.EnumDescriptor {
	return file_game_garbage_proto_enumTypes[0].Descriptor()
}

func (GarbageType) Type() protoreflect.EnumType {
	return &file_game_garbage_proto_enumTypes[0]
}

func (x GarbageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GarbageType.Descriptor instead.
func (GarbageType) EnumDescriptor() ([]byte, []int) {
	return file_game_garbage_proto_rawDescGZIP(), []int{0}
}

type Garbage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type            GarbageType `protobuf:"varint,1,opt,name=type,proto3,enum=game.GarbageType" json:"type,omitempty"`
	WeightInGrams   int32       `protobuf:"varint,2,opt,name=weightInGrams,proto3" json:"weightInGrams,omitempty"`
	RecyclingReward int32       `protobuf:"varint,3,opt,name=recyclingReward,proto3" json:"recyclingReward,omitempty"`
}

func (x *Garbage) Reset() {
	*x = Garbage{}
	mi := &file_game_garbage_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Garbage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Garbage) ProtoMessage() {}

func (x *Garbage) ProtoReflect() protoreflect.Message {
	mi := &file_game_garbage_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Garbage.ProtoReflect.Descriptor instead.
func (*Garbage) Descriptor() ([]byte, []int) {
	return file_game_garbage_proto_rawDescGZIP(), []int{0}
}

func (x *Garbage) GetType() GarbageType {
	if x != nil {
		return x.Type
	}
	return GarbageType_GARBAGE_TYPE_UNKNOWN
}

func (x *Garbage) GetWeightInGrams() int32 {
	if x != nil {
		return x.WeightInGrams
	}
	return 0
}

func (x *Garbage) GetRecyclingReward() int32 {
	if x != nil {
		return x.RecyclingReward
	}
	return 0
}

var File_game_garbage_proto protoreflect.FileDescriptor

var file_game_garbage_proto_rawDesc = []byte{
	0x0a, 0x12, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x67, 0x61, 0x72, 0x62, 0x61, 0x67, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x07, 0x47,
	0x61, 0x72, 0x62, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x61, 0x72, 0x62,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x47, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x47, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x72, 0x65,
	0x63, 0x79, 0x63, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2a, 0xbd, 0x01,
	0x0a, 0x0b, 0x47, 0x61, 0x72, 0x62, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x14, 0x47, 0x41, 0x52, 0x42, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x41, 0x52, 0x42, 0x41,
	0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x4c, 0x41, 0x53, 0x54, 0x49, 0x43, 0x10,
	0x01, 0x12, 0x16, 0x0a, 0x12, 0x47, 0x41, 0x52, 0x42, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x47, 0x4c, 0x41, 0x53, 0x53, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x47, 0x41, 0x52,
	0x42, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x41, 0x50, 0x45, 0x52, 0x10,
	0x03, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x41, 0x52, 0x42, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x4f, 0x52, 0x47, 0x41, 0x4e, 0x49, 0x43, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x47,
	0x41, 0x52, 0x42, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x45, 0x54, 0x41,
	0x4c, 0x10, 0x05, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x41, 0x52, 0x42, 0x41, 0x47, 0x45, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x53, 0x50, 0x45, 0x43, 0x49, 0x41, 0x4c, 0x10, 0x06, 0x42, 0x3f, 0x5a,
	0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x61, 0x69, 0x6b,
	0x6f, 0x6e, 0x65, 0x4b, 0x69, 0x73, 0x75, 0x2f, 0x72, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2d,
	0x69, 0x74, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_game_garbage_proto_rawDescOnce sync.Once
	file_game_garbage_proto_rawDescData = file_game_garbage_proto_rawDesc
)

func file_game_garbage_proto_rawDescGZIP() []byte {
	file_game_garbage_proto_rawDescOnce.Do(func() {
		file_game_garbage_proto_rawDescData = protoimpl.X.CompressGZIP(file_game_garbage_proto_rawDescData)
	})
	return file_game_garbage_proto_rawDescData
}

var file_game_garbage_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_game_garbage_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_game_garbage_proto_goTypes = []any{
	(GarbageType)(0), // 0: game.GarbageType
	(*Garbage)(nil),  // 1: game.Garbage
}
var file_game_garbage_proto_depIdxs = []int32{
	0, // 0: game.Garbage.type:type_name -> game.GarbageType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_game_garbage_proto_init() }
func file_game_garbage_proto_init() {
	if File_game_garbage_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_game_garbage_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_game_garbage_proto_goTypes,
		DependencyIndexes: file_game_garbage_proto_depIdxs,
		EnumInfos:         file_game_garbage_proto_enumTypes,
		MessageInfos:      file_game_garbage_proto_msgTypes,
	}.Build()
	File_game_garbage_proto = out.File
	file_game_garbage_proto_rawDesc = nil
	file_game_garbage_proto_goTypes = nil
	file_game_garbage_proto_depIdxs = nil
}
